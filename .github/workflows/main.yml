name: Kodkod frontend deploy

on:
  push:
    branches:
      - develop
      - sandbox
  pull_request:
    branches:
      - master
      - develop
  release:
    types: [released]

env:
  NODE_VERSION: 20.17.0
  CACHE_PACKAGE_MANAGER: 'yarn'

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Actions checkout
        uses: actions/checkout@v4

      - name: Node.js ${{ env.NODE_VERSION }} setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.CACHE_PACKAGE_MANAGER }}

      - name: Dependencies installation
        run: yarn install --frozen-lockfile

      - name: Format check
        run: yarn format-check

      - name: ESLint check
        run: yarn eslint-check

      - name: TypeScript check
        run: yarn ts-check

  build:
    if: ${{ github.ref_name == 'sandbox' || startsWith(github.head_ref, 'release/') || startsWith(github.head_ref, 'hotfix/') || (github.event_name == 'release' && ! github.event.release.prerelease) }}
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Actions checkout
        uses: actions/checkout@v4

      - name: Node.js ${{ env.NODE_VERSION }} setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.CACHE_PACKAGE_MANAGER }}

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Building for sandbox
        if: github.ref_name == 'sandbox'
        run: yarn build
        env:
          VITE_API_BASE_URL: https://api-sandbox.kodkod.cl

      - name: Building for staging
        if: startsWith(github.head_ref, 'release/') || startsWith(github.head_ref, 'hotfix/')
        run: yarn build
        env:
          VITE_API_BASE_URL: https://api-dev.kodkod.cl

      - name: Building for production
        if: ${{ github.event_name == 'release' && ! github.event.release.prerelease }}
        run: yarn build
        env:
          VITE_API_BASE_URL: https://api.kodkod.cl

      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  deploy-sandbox:
    if: github.ref_name == 'sandbox'
    name: app-sandbox.kodkod.cl
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to S3 bucket
        run: aws s3 sync ./ s3://app-sandbox.kodkod.cl

      - name: Clear distribution cache
        run: aws cloudfront create-invalidation --distribution-id E3IZXGHAA3XFIZ --paths "/*"

  deploy-staging:
    if: startsWith(github.head_ref, 'release/') || startsWith(github.head_ref, 'hotfix/')
    name: app-staging.kodkod.cl
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to S3 bucket
        run: aws s3 sync ./ s3://app-dev.kodkod.cl

      - name: Clear distribution cache
        run: aws cloudfront create-invalidation --distribution-id E2FNOGEEANDGM7 --paths "/*"

  deploy-prod:
    if: ${{ github.event_name == 'release' && ! github.event.release.prerelease }}
    name: app.kodkod.cl
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to S3 bucket
        run: aws s3 sync ./ s3://app.kodkod.cl

      - name: Clear distribution cache
        run: aws cloudfront create-invalidation --distribution-id E371T76OJMZGY9 --paths "/*"

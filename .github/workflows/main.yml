name: Kodkod frontend deploy

on:
  push:
    branches-ignore:
      - develop
      - main
  pull_request:
    branches:
      - development
      - main
    types:
      - closed

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Actions checkout
        uses: actions/checkout@v3

      - name: Check linting
        run: npx prettier --check .

  build:
    name: Build
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Node.js 18.x setup
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Installing dependencies
        run: npx yarn install

      - name: Building
        run: npx yarn build

      - name: Upload build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

  deploy:
    name: Production deploy
    needs: build
    if: github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to S3 bucket
        run: aws s3 sync ./ s3://${{ secrets.PRODUCTION_DNS }}

      - name: Clear distribution cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_DISTRIBUTION_ID }} --paths "/*"

  deploy-dev:
    name: Development deploy
    needs: build
    if: github.base_ref == 'development'
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to S3 bucket
        run: aws s3 sync ./ s3://${{ secrets.DEVELOPMENT_DNS }}

      - name: Clear distribution cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_DISTRIBUTION_ID }} --paths "/*"

{
  "root": true,
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "env": { "browser": true, "es2020": true },
  "extends": [
    "standard-with-typescript",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],
  "ignorePatterns": [
    "build",
    "dist",
    "coverage",
    ".eslintrc",
    ".gitignore",
    ".prettierrc",
    ".prettierignore",
    ".prettierrc-ci",
    "vite.config.ts",
    "babel.config.js",
    "jest.config.js",
    "jest-setup.ts"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": { "jsx": true }
  },
  "overrides": [
    {
      "files": ["*.js", "*.jsx", "*.ts", "*.tsx", "*.d.ts"],
      "parserOptions": {
        "project": "./tsconfig.json"
      }
    }
  ],
  "plugins": ["react", "react-refresh"],
  "rules": {
    /* General eslint rules */
    "no-extra-boolean-cast": "warn",
    "prefer-const": "warn",
    "no-useless-catch": "warn",
    "no-nested-ternary": "warn",

    /* import rules */
    "import/order": "off",
    "import/no-duplicates": "warn",
    "import/no-unresolved": "off",
    "import/no-absolute-path": "off",

    /* React refresh rules */
    "react-refresh/only-export-components": [
      "warn",
      { "allowConstantExport": true }
    ],

    /* Typescript rules */
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/triple-slash-reference": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/prefer-nullish-coalescing": "off",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-inferrable-types": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-confusing-void-expression": [
      "off",
      { "ignoreArrowShorthand": true }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": ["import", "variable"],
        "format": ["PascalCase", "camelCase", "UPPER_CASE", "snake_case"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "property",
        "format": null,
        "leadingUnderscore": "allow"
      },
      {
        "selector": ["typeAlias", "interface", "enum"],
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      }
    ],

    /* React rules */
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/display-name": "off",
    "react/no-unescaped-entities": "off",
    "react/jsx-key": [
      "error",
      {
        "checkFragmentShorthand": true,
        "checkKeyMustBeforeSpread": true,
        "warnOnDuplicates": true
      }
    ],
    "react/button-has-type": "warn",
    "react/no-unstable-nested-components": ["error", { "allowAsProps": true }],
    "react/self-closing-comp": "warn",
    "react/jsx-sort-props": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/no-typos": "warn",
    "react/jsx-curly-brace-presence": "warn",
    "react/jsx-no-leaked-render": ["off", { "validStrategies": ["ternary"] }],
    "react/jsx-no-useless-fragment": "warn",
    "react/function-component-definition": [
      "warn",
      { "namedComponents": "arrow-function" }
    ],
    "react/jsx-max-depth": ["off", { "max": 5 }],
    "react/destructuring-assignment": [
      "off",
      "always",
      { "destructureInSignature": "always" }
    ],
    "react/jsx-fragments": "error",
    "react/no-danger-with-children": "off",
    "react/no-danger": "off",
    "react/no-children-prop": "error",
    "react/jsx-no-script-url": "error",
    "react/jsx-pascal-case": "error",
    "react/no-unused-prop-types": "error",
    "react/prefer-stateless-function": "error"
  }
}
